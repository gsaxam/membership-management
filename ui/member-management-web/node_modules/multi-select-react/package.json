{
  "_args": [
    [
      {
        "raw": "multi-select-react",
        "scope": null,
        "escapedName": "multi-select-react",
        "name": "multi-select-react",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "/Users/p2345716/dev/membermanagementtool/ui/member-management-web"
    ]
  ],
  "_from": "multi-select-react@latest",
  "_id": "multi-select-react@0.1.8",
  "_inCache": true,
  "_location": "/multi-select-react",
  "_nodeVersion": "6.9.1",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/multi-select-react-0.1.8.tgz_1503402515665_0.4283992568962276"
  },
  "_npmUser": {
    "name": "ganesh-91",
    "email": "ganesh.khaire91@gmail.com"
  },
  "_npmVersion": "3.10.8",
  "_phantomChildren": {
    "acorn": "5.5.3",
    "acorn-dynamic-import": "2.0.2",
    "async": "2.6.0",
    "big.js": "3.2.0",
    "camelcase": "1.2.1",
    "cliui": "2.1.0",
    "co": "4.6.0",
    "code-point-at": "1.1.0",
    "create-react-class": "15.6.3",
    "decamelize": "1.2.0",
    "emojis-list": "2.1.0",
    "enhanced-resolve": "3.4.1",
    "fbjs": "0.8.16",
    "get-caller-file": "1.0.2",
    "interpret": "1.1.0",
    "json-loader": "0.5.7",
    "json-stable-stringify": "1.0.1",
    "json5": "0.5.1",
    "loader-runner": "2.3.0",
    "loose-envify": "1.3.1",
    "memory-fs": "0.4.1",
    "mkdirp": "0.5.1",
    "node-libs-browser": "2.1.0",
    "number-is-nan": "1.0.1",
    "object-assign": "4.1.1",
    "os-locale": "1.4.0",
    "prop-types": "15.6.1",
    "read-pkg-up": "1.0.1",
    "require-directory": "2.1.1",
    "require-main-filename": "1.0.1",
    "set-blocking": "2.0.0",
    "strip-ansi": "3.0.1",
    "tapable": "0.2.8",
    "uglify-to-browserify": "1.0.2",
    "watchpack": "1.5.0",
    "webpack-sources": "1.1.0",
    "which-module": "1.0.0",
    "window-size": "0.1.0",
    "wrap-ansi": "2.1.0",
    "y18n": "3.2.1"
  },
  "_requested": {
    "raw": "multi-select-react",
    "scope": null,
    "escapedName": "multi-select-react",
    "name": "multi-select-react",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/multi-select-react/-/multi-select-react-0.1.8.tgz",
  "_shasum": "14e22c3fb99d19a8a6ff44348912be32303061d6",
  "_shrinkwrap": null,
  "_spec": "multi-select-react",
  "_where": "/Users/p2345716/dev/membermanagementtool/ui/member-management-web",
  "author": {
    "name": "ganesh khaire",
    "email": "ganesh.khaire91@gmail.com"
  },
  "bugs": {
    "url": "https://github.com/ganesh-91/multi-select-react/issues"
  },
  "dependencies": {
    "react": "^15.5.4",
    "webpack": "^2.6.1"
  },
  "description": "Multi Select React â€“ A React Component providing multi select and single select functionality.",
  "devDependencies": {
    "babel-cli": "^6.24.1",
    "babel-core": "^6.24.1",
    "babel-loader": "^7.0.0",
    "babel-plugin-transform-object-rest-spread": "^6.23.0",
    "babel-plugin-transform-react-jsx": "^6.24.1",
    "babel-preset-env": "^1.5.1",
    "css-loader": "^0.26.1",
    "eslint": "^3.12.2",
    "eslint-plugin-react": "^6.8.0",
    "style-loader": "^0.13.1"
  },
  "directories": {},
  "dist": {
    "shasum": "14e22c3fb99d19a8a6ff44348912be32303061d6",
    "tarball": "https://registry.npmjs.org/multi-select-react/-/multi-select-react-0.1.8.tgz"
  },
  "gitHead": "95e79a85d457ef6dc1a834325df5e6014dd771d5",
  "homepage": "https://github.com/ganesh-91/multi-select-react#readme",
  "keywords": [
    "react-multi-select-dropdown",
    "multiselect",
    "react-select-multi",
    "react-select-multiple",
    "react-multi-select",
    "react-multiple-select",
    "react-multi-options",
    "react-component"
  ],
  "license": "MIT",
  "main": "build/index.js",
  "maintainers": [
    {
      "name": "ganesh-91",
      "email": "ganesh.khaire91@gmail.com"
    }
  ],
  "name": "multi-select-react",
  "optionalDependencies": {},
  "peerDependencies": {
    "react": "^15.5.4"
  },
  "readme": "# multi-select-react\n\n## Description\nA React Component providing multi select and single select functionality.(under development)\n\n----\n## Installation\n```\nnpm install multi-select-react\n```\n----\n## Demo\n[Multi-select-react](https://ganesh-91.github.io/multi-select-react/)\n\n----\n## 1. Basic Usage\n```js\nimport React, { Component } from 'react';\nimport  MultiSelectReact  from 'multi-select-react';\n\nclass MyComponent extends Component {\n  constructor() {\n        super();\n        this.state = {\n            multiSelect: []\n        };\n    }\n  render() {\n        const selectedOptionsStyles = {\n            color: \"#3c763d\",\n            backgroundColor: \"#dff0d8\"\n        };\n        const optionsListStyles = {\n            backgroundColor: \"#dff0d8\",\n            color: \"#3c763d\"\n        };\n    return (\n      <MultiSelectReact \n      options={this.state.multiSelect}\n      optionClicked={this.optionClicked.bind(this)}\n      selectedBadgeClicked={this.selectedBadgeClicked.bind(this)}\n      selectedOptionsStyles={selectedOptionsStyles}\n      optionsListStyles={optionsListStyles} />\n    );\n  }\n\n  optionClicked(optionsList) {\n        this.setState({ multiSelect: optionsList });\n  }\n  selectedBadgeClicked(optionsList) {\n        this.setState({ multiSelect: optionsList });\n  }\n\n}\n```\n\n## 2. Single Select\n```js\nimport React, { Component } from 'react';\nimport  MultiSelectReact  from 'multi-select-react';\n\nclass MyComponent extends Component {\n  constructor() {\n        super();\n        this.state = {\n            multiSelect: []\n        };\n    }\n  render() {\n        const selectedOptionsStyles = {\n            color: \"#3c763d\",\n            backgroundColor: \"#dff0d8\"\n        };\n        const optionsListStyles = {\n            backgroundColor: \"#dff0d8\",\n            color: \"#3c763d\"\n        };\n    return (\n      <MultiSelectReact \n      options={this.state.multiSelect}\n      optionClicked={this.optionClicked.bind(this)}\n      selectedBadgeClicked={this.selectedBadgeClicked.bind(this)}\n      selectedOptionsStyles={selectedOptionsStyles}\n      optionsListStyles={optionsListStyles}\n      isSingleSelect={true} />\n    );\n  }\n\n  optionClicked(optionsList) {\n        this.setState({ multiSelect: optionsList });\n  }\n  selectedBadgeClicked(optionsList) {\n        this.setState({ multiSelect: optionsList });\n  }\n\n}\n```\nDefault value for isSingleSelect is false, for using this component as normal single select component set isSingleSelect to true.\n\n\n## 3. Text Wrap\n```js\nimport React, { Component } from 'react';\nimport  MultiSelectReact  from 'multi-select-react';\n\nclass MyComponent extends Component {\n  constructor() {\n        super();\n        this.state = {\n            multiSelect: []\n        };\n    }\n  render() {\n        const selectedOptionsStyles = {\n            color: \"#3c763d\",\n            backgroundColor: \"#dff0d8\"\n        };\n        const optionsListStyles = {\n            backgroundColor: \"#dff0d8\",\n            color: \"#3c763d\"\n        };\n    return (\n      <MultiSelectReact \n      options={this.state.multiSelect}\n      optionClicked={this.optionClicked.bind(this)}\n      selectedBadgeClicked={this.selectedBadgeClicked.bind(this)}\n      selectedOptionsStyles={selectedOptionsStyles}\n      optionsListStyles={optionsListStyles}\n      isTextWrap={true} />\n    );\n  }\n\n  optionClicked(optionsList) {\n        this.setState({ multiSelect: optionsList });\n  }\n  selectedBadgeClicked(optionsList) {\n        this.setState({ multiSelect: optionsList });\n  }\n\n}\n```\nDefault value for isTextWarp is true, for component to grow vertically and display all options selected set isTextWarp to false.\n\n----\n\n## Props\n\n| Prop  | Type  | Default | Description |\n|:--------- | :---- | :----   |:----  |\n| `selectedOptionsColor` | `object` | `{}` | CSS for MultiSelect options selected badges\n| `optionsListStyles` | `object` | `{}` | CSS for MultiSelect options drop down\n| `options` | `array` | R | Options to be pre-populated in select\n| `optionClicked` | `function` | R | Callback, invoked after an option is clicked\n| `selectedBadgeClicked` | `function` | R | Callback, invoked after an selected option badge\n| `isSingleSelect` | `boolean` | Optional | Boolean value for single select functionality, component's default behavior is multi select\n| `isTextWrap` | `boolean` | Optional | Boolean value for text wrap i.e selected option will expand horizontally\n\n## Licence\n\n[MIT]\n\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com/ganesh-91/multi-select-react.git"
  },
  "scripts": {
    "build": "webpack"
  },
  "version": "0.1.8"
}
